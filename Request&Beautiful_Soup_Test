import requests
from bs4 import BeautifulSoup
url = 'https://www.thermofisher.cn/order/catalog/product/29810?SID=srch-srp-29810'  
headers =  {
    "User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36"
}
try:
    # 发送 GET 请求获取网页内容
    response = requests.get(url)
    
    # 检查响应状态码，200 表示请求成功
    if response.status_code == 200:
        # 使用 response.content 获取网页内容的二进制数据
        # 如果网页内容是文本，你也可以使用 response.text 来获取字符串形式的内容
        page_content = response.content       
        # 在这里你可以对网页内容进行进一步处理，例如使用 Beautiful Soup 进行解析
        # 打印部分网页内容作为示例
        print(page_content[:20])  # 打印前200个字节的内容       
    else:
        print('请求失败，状态码:', response.status_code)

except requests.exceptions.RequestException as e:
    print('请求发生异常:', e)
response = requests.get(url)
page_content= response.content
# 假设 page_content 是之前获取到的网页内容
soup = BeautifulSoup(page_content, 'html.parser')

# 使用find()方法查找单个匹配的标签
title_tag = soup.find('title')
print('Title:', title_tag.text)

# 使用find_all()方法查找所有匹配的标签
# li_tags = soup.find_all('li')
# print('List Items:')
# for li_tag in li_tags:
#     print(li_tag.text)

# 查找div标签的文本内容和class属性
# div_tag = soup.find('div', class_='container')
# print('Div Text:', div_tag.text)
# print('Div Class:', div_tag['class'])
# 假设 cell_element 是已经定位到的目标单元格的 Element 对象
cell_element_catalognumber = soup.find('div', class_='pdp-table-sm__value')
# 提取已定位单元格的文本内容

print(f'货号:{cell_element_catalognumber.text}')


cell_element_pkg = soup.find('div', class_='pdp-specifications__value')
# 提取已定位单元格的文本内容
print(f'PKG:{cell_element_pkg.text}')

cell_element_price = soup.find('div', class_='pdp-price')
# 提取已定位单元格的文本内容
print(f'价格:{cell_element_price.text}')





